<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-9999</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///spawn other controllers
instance_create(x,y,ctrl_abilities);

instance_create(x,y,ctrl_playermouse);

instance_create(x,y,ctrl_player);
instance_create(x,y,ctrl_grid);


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///TIMERS

test_timer=0;
debug_timer=0;

camera_shake_timer=0;
local_camera_shake_start=false;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///NOF MOVING


for(var i=0;i&lt;9999;i++){
    if(nof[i]!="none"){
    if(nof_t[i]&lt;=0){
    //array timed out -&gt; replace from upper
    nof[i]=nof[i+1];
    nof_t[i]=nof_t[i+1];
    //move pos
    nof_x[i]=nof_x[i+1];
    nof_y[i]=nof_y[i+1];
    //move type
    nof_type[i]=nof_type[i+1];
    //reset upper
    nof[i+1]="none";nof_t[i+1]=0;nof_x[i+1]=0;nof_y[i+1]=0;nof_type[i+1]=0;
     }
     nof_t[i]--; //minus duration
    }
    }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///nof array check EMPTY



</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///time loop

time_steps++;
//time_pro+=(time_steps/room_speed);
    if (time_steps&gt;=room_speed){
    time_s++;time_steps=0;
    }
    if (time_s==60){
    time_m++;time_s=0;
    }
    if (time_m==60){
    time_h++;time_m=0;
    }

     /*test*/ //if(time_steps==10){nof_pushback(mouse_x,mouse_y,0,"Asd",100);}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///TEST AREA
test_timer++;
if(test_timer&gt;15){
test_timer=16;
    if(keyboard_check(ord('O'))){
        test_timer=0;
        instance_create(mouse_x,mouse_y,des_woodenbox);
        
}}

if(test_timer&gt;15){
test_timer=16;
    if(keyboard_check(ord('I'))){
        test_timer=0;
        instance_create(mouse_x,mouse_y,wall);
        
}}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///CAMERA BROKEN (views)
/*
if(view_enabled){

    view_xview[0] = ctrl_playermouse.x-room_width;
    view_yview[0] = ctrl_playermouse.y-room_height;

}*/


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///camera shake

///if(get_camerashake_amount())
/*local_
if(keyboard_check_released(ord('L'))){
local_camera_shake_start=true;
}*/
if(global.camera_shake_start){
view_yview[0]+=random_range(-(get_camera_shake_intensity()), get_camera_shake_intensity());
view_xview[0]+=random_range(-(get_camera_shake_intensity()), get_camera_shake_intensity());
global.camera_shake_timer++;
if(global.camera_shake_timer&gt;15){
global.camera_shake_timer=0;
global.camera_shake_start=false;
}}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///RESET ROOM

if(debug){
if(keyboard_check(vk_f5)){
room_restart();
}
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///spawn player_draw

if(instance_exists(player)){
    if(!instance_exists(player_draw)){
    instance_create(player.x,player.y,player_draw);
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///DEBUG TOGGLE

debug_timer++;
if(debug_timer&gt;15){
debug_timer=16;
if(keyboard_check(vk_f12)){
debug=!debug;
debug_timer=0;
}
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///TEST AREA
if(debug==true){
if(instance_exists(player)){
dir_pos = point_direction(player.x,player.y,mouse_x,mouse_y);

var iks =lengthdir_x(100, dir_pos)+player.x;
var ips =lengthdir_y(100, dir_pos)+player.y;

draw_text(20,50,string(iks));
draw_text(20,80,string(ips));
draw_text(80,50,string(player.x));
draw_text(80,80,string(player.y));

draw_text(400, 20, "DEBUG MODE ON");

}
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///DRAW NOF

draw_set_font(font_nof);draw_set_color(get_nofcolor());
draw_set_color(c_lime);

for(var i=0;i&lt;999;i++){
    if(nof[i]!="none"){
        if(nof_type[i]==0){
        //draw_text(20,i*12, string(nof[i]));
            if(debug){
            draw_text(20,i*12,string(nof[i]));
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///DRAW NOFITICATIONS

draw_set_font(font_nof);draw_set_color(get_nofcolor());
draw_set_color(c_white);

for(var i=0;i&lt;999;i++){
    if(nof[i]!="none"){
        if(nof_type[i]!=0){
        //draw_text(20,i*12, string(nof[i]));
        draw_text(nof_x[i],nof_y[i],string(nof[i]));
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///TEST AREA


if(instance_exists(player)){

//draw_sprite(spr_default,0,get_xfrontplayer(150),get_yfrontplayer(150));
}


//draw_text(
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
